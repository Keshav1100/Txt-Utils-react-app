{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","role","onClick","modedark","style","color","modelight","modeyellow","modered","modeblue","defaultProps","TextForm","useState","text","setText","btnCopyText","setBtnCopytext","wordscount","split","length","textTheme","titleheading","onChange","event","target","value","rows","backgroundColor","textThemedark","newText","toUpperCase","alert","toLowerCase","start","charAt","slice","join","navigator","clipboard","writeText","setTimeout","Alert","handleCapitalClick","msg","App","textmode","settextmode","setAlert","showAlert","message","document","querySelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAGe,SAASA,EAAOC,GAC3B,OACI,8BAEI,qBAAKC,UAAU,8CAAf,SACJ,sBAAKA,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,QAC5C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,oBAEF,oBAAID,UAAU,gBAyBhB,qBAAKA,UAAU,iBAAiBK,KAAK,QAAQ,aAAW,cAAxD,SACR,wBAAQF,KAAK,SAASH,UAAU,eAAeM,QAASP,EAAMQ,SAAUC,MAAO,CAACC,MAAM,aAAtF,iBAEQ,qBAAKT,UAAU,iBAAiBK,KAAK,QAAQ,aAAW,cAAxD,SACR,wBAAQF,KAAK,SAASH,UAAU,gBAAgBM,QAASP,EAAMW,UAAWF,MAAO,CAACC,MAAM,aAAxF,iBAGQ,qBAAKT,UAAU,iBAAiBK,KAAK,QAAQ,aAAW,cAAxD,SACR,wBAAQF,KAAK,SAASH,UAAU,kBAAkBM,QAASP,EAAMY,WAAYH,MAAO,CAACC,MAAM,aAA3F,iBAEQ,qBAAKT,UAAU,iBAAiBK,KAAK,QAAQ,aAAW,cAAxD,SACR,wBAAQF,KAAK,SAASH,UAAU,iBAAiBM,QAASP,EAAMa,QAASJ,MAAO,CAACC,MAAM,aAAvF,iBAEQ,qBAAKT,UAAU,iBAAiBK,KAAK,QAAQ,aAAW,cAAxD,SACR,wBAAQF,KAAK,SAASH,UAAU,kBAAkBM,QAASP,EAAMc,SAAUL,MAAO,CAACC,MAAM,aAAzF,2BAUJX,EAAOgB,aAAe,CAACZ,MAAM,kB,MCnEd,SAASa,EAAShB,GAC7B,MAAwBiB,mBAAS,oBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAAS,aAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAMIC,EAAoB,KAAPJ,EAAU,EAAEA,EAAKK,MAAM,QAAQC,OAsChD,OAEI,cADA,CACA,iBACA,sBAAKvB,UAAU,YAAYQ,MAAO,CAACC,MAAK,UAAwB,UAAlBV,EAAMyB,UAAoB,QAAQ,UAAhF,UACI,+BAAKzB,EAAM0B,aAAX,OACJ,qBAAKzB,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAe0B,SAThB,SAACC,GACpBT,EAAQS,EAAMC,OAAOC,QAQ0CzB,GAAG,SAAS0B,KAAK,IAAID,MAAQZ,EAAMT,MAAO,CAACuB,gBAAe,UAA4B,SAAtBhC,EAAMiC,cAAuB,UAAU,cAEtK,gCACA,wBAAQhC,UAAU,4BAA4BM,QA9C5B,WAClB,IAAI2B,EAAUhB,EAAKiB,cACnBhB,EAAQe,GACRlC,EAAMoC,MAAM,yBAAyB,YA2CrC,kCACA,wBAAQnC,UAAU,4BAA4BM,QA1C3B,WACnB,IAAI2B,EAAUhB,EAAKmB,cACnBlB,EAAQe,GACRlC,EAAMoC,MAAM,yBAAyB,YAuCrC,mCACA,wBAAQnC,UAAU,4BAA4BM,QArBvB,WACvB,IAAI2B,EAAUhB,EAAKmB,cACfC,EAAQpB,EAAKqB,OAAO,GAAGJ,cAC3BD,EAAUA,EAAQM,MAAM,GACxBrB,EAAQmB,EAAQJ,GAChBlC,EAAMoC,MAAM,uBAAuB,YAgBnC,wBACA,wBAAQnC,UAAU,4BAA4BM,QA/BpB,WAC1B,IAAI2B,EAAUhB,EAAKK,MAAM,QACzBJ,EAAQe,EAAQO,KAAK,MACrBzC,EAAMoC,MAAM,uBAAuB,YA4BnC,iCACA,yBAAQnC,UAAU,4BAA4BM,QAxC1B,WACpBmC,UAAUC,UAAUC,UAAU1B,GAC9BG,EAAe,UACfwB,YAAW,WACPxB,EAAe,eAChB,KACHrB,EAAMoC,MAAM,sBAAsB,YAkClC,UAAyEhB,EAAzE,OACA,wBAAQnB,UAAU,2BAA2BM,QA5BxB,WACrBY,EAAQ,IACRnB,EAAMoC,MAAM,mBAAmB,YA0B/B,+BAGA,sBAAKnC,UAAU,iBAAiBQ,MAAO,CAACC,MAAK,UAAwB,UAAlBV,EAAMyB,UAAoB,QAAQ,UAArF,UACI,uDACA,8BAAIH,EAAJ,WAAwBJ,EAAKM,OAA7B,iBACA,8BAAK,KAAMF,EAAX,2BClEG,SAASwB,EAAM9C,GAO1B,OACIA,EAAMoC,OACN,8BACI,sBAAKnC,UAAS,sBAAiBD,EAAMoC,MAAMhC,MAAQE,KAAK,QAAxD,UACI,mCAVe,SAACY,GACxB,IAAIgB,EAAUhB,EAAKmB,cAGnB,OAFYnB,EAAKqB,OAAO,GAAGJ,eAC3BD,EAAUA,EAAQM,MAAM,IAOPO,CAAmB/C,EAAMoC,MAAMhC,MAAxC,QAA0DJ,EAAMoC,MAAMY,SCoFvEC,MAnFf,WAOE,MAAgChC,mBAAS,QAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAA0BlC,mBAAS,MAAnC,mBAAOmB,EAAP,KAAcgB,EAAd,KA6CQC,EAAY,SAACC,EAAQlD,GACzBgD,EAAS,CACTJ,IAAIM,EACJlD,KAAKA,IAEPyC,YAAW,WACTO,EAAS,QACR,OAEL,OACE,qCAEA,cAACrD,EAAD,CAAQI,MAAM,YAAYQ,UA1CT,WAEjBwC,EAAY,SACZI,SAASC,cAAc,QAAQ/C,MAAMuB,gBAAgB,QACrDqB,EAAU,sBAAsB,YAsCiBxC,QA9BlC,WAEfsC,EAAY,SACZI,SAASC,cAAc,QAAQ/C,MAAMuB,gBAAgB,UACrDqB,EAAU,oBAAoB,YA0BsCvC,SAxBpD,WAEhBqC,EAAY,SACVI,SAASC,cAAc,QAAQ/C,MAAMuB,gBAAgB,YACrDqB,EAAU,qBAAqB,YAoBwDzC,WAlBrE,WAElBuC,EAAY,SACZI,SAASC,cAAc,QAAQ/C,MAAMuB,gBAAgB,YACrDqB,EAAU,uBAAuB,YAc+E7C,SApClG,WAEhB2C,EAAY,SACZI,SAASC,cAAc,QAAQ/C,MAAMuB,gBAAgB,UACrDqB,EAAU,qBAAqB,YAgCyG5B,UAAWyB,IAEnJ,cAACJ,EAAD,CAAOV,MAAQA,IACf,qBAAKnC,UAAY,YAAjB,SAMU,cAACe,EAAD,CAAUU,aAAe,mCAAmCD,UAAWyB,EAAUd,MAAOiB,UC5EvFI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.a74488fd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            {/* <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}> */}\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/About\">About us</Link> */}\r\n              </li>\r\n            </ul>\r\n              {/* <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" onClick={props.toggleTheme} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n              <label className={`form-check-label text-${props.textTheme}`} htmlFor=\"flexSwitchCheckChecked\">Dark mode</label>\r\n            </div> */}\r\n            {/* <div className=\"dropdown\">\r\n            <a className=\"btn btn-secondary dropdown-toggle m-2\" href=\"/\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown link\r\n            </a>\r\n\r\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n              <li>\r\n                <div className=\"mx-2\">\r\n              <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <button type=\"button\" className=\"btn btn-info\">8</button>\r\n              </div>\r\n              </div>\r\n              </li>\r\n            </ul>\r\n          </div> */}\r\n          \r\n\r\n            <div className=\"btn-group mx-1\" role=\"group\" aria-label=\"Third group\">\r\n    <button type=\"button\" className=\"btn btn-dark\" onClick={props.modedark} style={{color:\"#ffc10700\"}}>8</button>\r\n          </div>\r\n            <div className=\"btn-group mx-1\" role=\"group\" aria-label=\"Third group\">\r\n    <button type=\"button\" className=\"btn btn-light\" onClick={props.modelight} style={{color:\"#ffc10700\"}}>8</button>\r\n          </div>\r\n  \r\n            <div className=\"btn-group mx-1\" role=\"group\" aria-label=\"Third group\">\r\n    <button type=\"button\" className=\"btn btn-warning\" onClick={props.modeyellow} style={{color:\"#ffc10700\"}}>8</button>\r\n          </div>\r\n            <div className=\"btn-group mx-1\" role=\"group\" aria-label=\"Third group\">\r\n    <button type=\"button\" className=\"btn btn-danger\" onClick={props.modered} style={{color:\"#ffc10700\"}}>8</button>\r\n          </div>\r\n            <div className=\"btn-group mx-1\" role=\"group\" aria-label=\"Third group\">\r\n    <button type=\"button\" className=\"btn btn-primary\" onClick={props.modeblue} style={{color:\"#ffc10700\"}}>8</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n        </div>\r\n    )\r\n}\r\n// Navbar.propTypes = {title: PropTypes.string}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired}//We can use isrequired ,then we see an error if default prop or prop in the app.js is not given\r\nNavbar.defaultProps = {title:\"Set Title here\"}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"Enter text here \");\r\n    const [btnCopyText, setBtnCopytext] = useState(\"Copy text\");\r\n    // text = \"vfvc\"// Wrong way to change the state\r\n    // setText(\"vfvc\")// correct way to change the state\r\n    // const analyzedWords = ()=>{\r\n    //     let words text.split(\" \").length\r\n    // }\r\n    let wordscount = text===\"\"?0:text.split(/[ ]+/).length\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.alert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handlelowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.alert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    const handlecopyClick = ()=>{\r\n        navigator.clipboard.writeText(text);    \r\n        setBtnCopytext(\"Copied\")\r\n        setTimeout(() => {\r\n            setBtnCopytext(\"Copy Text\")\r\n        }, 1000);\r\n        props.alert(\"Copied to clipboard\",\"success\");\r\n    }\r\n    const handleExtraspaceClick = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.alert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const handleclearClick = ()=>{\r\n        setText(\"\");\r\n        props.alert(\"All text cleared\",\"success\");\r\n    }\r\n    const handleCapitalClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        let start = text.charAt(0).toUpperCase();\r\n        newText = newText.slice(1,)\r\n        setText(start + newText);\r\n        props.alert(\"Capitalized the text\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    return ( \r\n        // #dfe9ec\r\n        <div> \r\n        <div className=\"container\" style={{color : `${props.textTheme===\"black\"?\"white\":\"black\"}`}}>\r\n            <h2>{props.titleheading} </h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" onChange = {handleOnChange} id=\"mytext\" rows=\"3\" value= {text} style={{backgroundColor : `${props.textThemedark===\"dark\"?\"#dfe9ec\":\"white\"}`}}></textarea>\r\n        </div>\r\n        <div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handlelowClick}>Convert to lowercase </button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCapitalClick}>Capitalize</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraspaceClick}>Remove extra spaces</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecopyClick}>{btnCopyText} </button>\r\n        <button className=\"btn btn-danger mx-2 my-1\" onClick={handleclearClick}>Clear text </button>\r\n        </div>  \r\n        </div>\r\n        <div className=\"container mx-2\" style={{color : `${props.textTheme===\"black\"?\"white\":\"black\"}`}}>\r\n            <h1>Your text analiztion:</h1>\r\n            <p>{wordscount} words, {text.length} characters</p>\r\n            <p>{(4.16)*wordscount} sec :Read time</p>\r\n\r\n        </div>\r\n        </div>        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const handleCapitalClick = (text)=>{\r\n        let newText = text.toLowerCase();\r\n        let start = text.charAt(0).toUpperCase();\r\n        newText = newText.slice(1,)\r\n        return start + newText;\r\n    }\r\n    return (\r\n        props.alert &&\r\n        <div>\r\n            <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n                <strong>{handleCapitalClick(props.alert.type)}! </strong>{props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\n// import About from \"./components/About\"\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n// import About from './components/About';\nfunction App() {\n  // const [modelight, setmode] = useState(\"light\")\n  // const [mode, setmode] = useState(\"light\")\n  // const [modered, setmode] = useState(\"red\")\n  // const [modeyellow, setmode] = useState(\"yellow\")\n  // const [modeblue, setmode] = useState(\"blue\")\n  // const [modedark, setmode] = useState(\"dark\")\n  const [textmode, settextmode] = useState(\"dark\")\n  const [alert, setAlert] = useState(null)\n  // const toggleMode = ()=>{\n  //   if(mode===\"light\"){\n  //     setmode(\"dark\");\n  //     settextmode(\"light\");\n  //     document.querySelector(\"body\").style.backgroundColor=\"#0b3156\";;\n  //     showAlert(\"Dark mode enabled\",\"success\");\n  //   }\n  //   else{\n  //     setmode(\"light\");\n  //     settextmode(\"dark\");\n  //     document.querySelector(\"body\").style.backgroundColor=\"white\";\n  //     showAlert(\"Light mode enabled\",\"success\");\n  //   }\n  // }\n  const lightTheme = ()=>{\n    // setmode(\"light\");\n    settextmode(\"white\");\n    document.querySelector(\"body\").style.backgroundColor=\"white\";\n    showAlert(\"Light theme enabled\",\"success\");\n  }\n  const darkTheme = ()=>{\n    // setmode(\"light\");\n    settextmode(\"black\");\n    document.querySelector(\"body\").style.backgroundColor=\"#0b3156\";\n    showAlert(\"Dark theme enabled\",\"success\");\n  }\n  const redTheme = ()=>{\n    // setmode(\"light\");\n    settextmode(\"white\");\n    document.querySelector(\"body\").style.backgroundColor=\"#f84343\";\n    showAlert(\"Red theme enabled\",\"success\");\n  }\n  const blueTheme = ()=>{\n    // setmode(\"light\");\n    settextmode(\"black\");\n      document.querySelector(\"body\").style.backgroundColor=\"#0037fff0\";\n      showAlert(\"Blue theme enabled\",\"success\");\n    }\n    const yellowTheme = ()=>{\n      // setmode(\"light\");\n      settextmode(\"white\");\n      document.querySelector(\"body\").style.backgroundColor=\"#ffc00fdb\";\n      showAlert(\"Yellow theme enabled\",\"success\");\n    }\n    const showAlert = (message,type)=>{\n      setAlert({\n      msg:message,\n      type:type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1200);\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"Textutils\" modelight={lightTheme} modered={redTheme} modeblue={blueTheme} modeyellow={yellowTheme} modedark={darkTheme}  textTheme={textmode}/>\n    {/* <Navbar title=\"Textutils\" modelight={lightTheme} modered={redTheme} modeblue={blueTheme} modeyellow={yellowTheme} modedark={darkTheme} toggleTheme = {toggleMode} textTheme={textmode}/> */}\n    <Alert alert ={alert} />\n    <div className = \"container\">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n              <TextForm titleheading = \"Enter your text here to analyze:\" textTheme={textmode} alert={showAlert}/>\n          {/* </Route> */}\n      {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}